'North Carolina', 'North Dakota', 'Ohio', 'Oklahoma', 'Oregon',
'Pennsylvania', 'Rhode Island', 'South Carolina', 'South Dakota',
'Tennessee', 'Texas', 'Utah', 'Vermont', 'Virginia', 'Washington',
'West Virginia', 'Wisconsin', 'Wyoming')
loc <- rmvnorm(50,c(0,0),matrix(c(1,.7,.7,1),ncol=2))
plot(loc[,1],loc[,2],type="n")
text(loc[,1],loc[,2],states)
library(wordcloud)
library(tm)
states <- c('Alabama', 'Alaska', 'Arizona', 'Arkansas',
'California', 'Colorado', 'Connecticut', 'Delaware',
'Florida', 'Georgia', 'Hawaii', 'Idaho', 'Illinois',
'Indiana', 'Iowa', 'Kansas', 'Kentucky', 'Louisiana',
'Maine', 'Maryland', 'Massachusetts', 'Michigan', 'Minnesota',
'Mississippi', 'Missouri', 'Montana', 'Nebraska', 'Nevada',
'New Hampshire', 'New Jersey', 'New Mexico', 'New York',
'North Carolina', 'North Dakota', 'Ohio', 'Oklahoma', 'Oregon',
'Pennsylvania', 'Rhode Island', 'South Carolina', 'South Dakota',
'Tennessee', 'Texas', 'Utah', 'Vermont', 'Virginia', 'Washington',
'West Virginia', 'Wisconsin', 'Wyoming')
loc <- rmvnorm(50,c(0,0),matrix(c(1,.7,.7,1),ncol=2))
plot(loc[,1],loc[,2],type="n")
text(loc[,1],loc[,2],states)
textplot(data.pca$x[,1], data.pca$x[,2], row.names(data.pca$x))
textplot(data.pca$x[,1], data.pca$x[,2], row.names(data.pca$x), cex = 0.5)
textplot(data.pca$x[,1], data.pca$x[,2], row.names(data.pca$x), cex = 0.5)
textplot(data.pca$x[,1], data.pca$x[,2], row.names(data.pca$x), cex = 0.5)
textplot(data.pca$x[,1], data.pca$x[,2], row.names(data.pca$x), cex = 0.5)
textplot(data.pca$x[,1], data.pca$x[,2], row.names(data.pca$x), cex = 0.5, xlim=c(-300,300))
textplot(data.pca$x[,1],
data.pca$x[,2],
row.names(data.pca$x),
cex = 0.5,
xlim=c(-300,300),
ylim=c(-150,75)
)
textplot(data.pca$x[,1],
data.pca$x[,2],
row.names(data.pca$x),
cex = 0.8,
xlim=c(-300,300),
ylim=c(-150,75)
)
textplot(data.pca$x[,1],
data.pca$x[,2],
row.names(data.pca$x),
cex = 0.8,
xlim=c(-300,300),
ylim=c(-150,75),
pch=19
)
textplot(data.pca$x[,1],
data.pca$x[,2],
row.names(data.pca$x),
cex = 0.7,
xlim=c(-300,300),
ylim=c(-150,75)
)
par(mfrow = 1:2)
textplot(data.pca$x[,1],
data.pca$x[,2],
row.names(data.pca$x),
cex = 0.7,
xlim=c(-300,300),
ylim=c(-150,75)
)
direct.label(xyplot(b~a,df,groups=t, col="black"))
plot(data.pca$x[,1], data.pca$x[,2])
par(mfrow = 1:2)
plot(data.pca$x[,1], data.pca$x[,2])
textplot(data.pca$x[,1],
data.pca$x[,2],
row.names(data.pca$x),
cex = 0.7,
xlim=c(-300,300),
ylim=c(-150,75)
)
par(mfrow = 1:1)
par(mfrow = c(1,1))
textplot(data.pca$x[,1],
data.pca$x[,2],
row.names(data.pca$x),
cex = 0.7,
xlim=c(-300,300),
ylim=c(-150,75)
)
textplot(data.pca$x[,1],
data.pca$x[,2],
row.names(data.pca$x),
cex = 0.7,
xlim=c(-250,300),
ylim=c(-150,75)
)
textplot(data.pca$x[,1],
data.pca$x[,2],
row.names(data.pca$x),
cex = 0.7,
xlim=c(-250,300),
ylim=c(-150,75)
)
bubba <- list(first="one", second="two", third="third")
class(bubba) <- append(class(bubba),"Flamboyancy")
bubba
GetFirst <- function(x){
UseMethod("GetFirst",x)
}
GetFirst.Flamboyancy <- function(x){
return(x$first)
}
GetFirst(bubba)
q()
library(biomaRt)
snp <- useMart("snp",dataset="hsapiens_snp")
out=getBM(attributes=c("refsnp_id","allele","chrom_start"), filters=c("chr_name","chrom_start","chrom_end"), values=list(8,148350, 158612), mart=snp)
nrow(out)
q()
Sys.setenv(http_proxy="http://127.0.0.1:8080")
library(biomaRt)
snp <- useMart("snp",dataset="hsapiens_snp")
out=getBM(attributes=c("refsnp_id","allele","chrom_start"), filters=c("chr_name","start","end"), values=list(8,148350, 158612), mart=snp)
nrow(out)
head(out)
tail(out)
start <- Sys.time()
end <- Sys.time()
print(end - start)
start <- Sys.time()
out=getBM(attributes=c("refsnp_id","allele","chrom_start"),
filters=c("chr_name","start","end"),
values=list(8,148350, 158612),
mart=snp)
end <- Sys.time()
print(end - start)
nrow(out)
head(out)
tail(out)
listFilters(snp)
listFilters(snp)[1]
ensembl = useMart("ensembl",dataset="hsapiens_gene_ensembl")
my_refseq <- 'NM_001101'
getBM(attributes='ensembl_gene_id', filters = 'refseq_mrna', values = my_refseq , mart = ensembl)
getBM(attributes=c('ensembl_gene_id','description'), filters = 'refseq_mrna', values = my_refseq , mart = ensembl)
listMarts()
useMart()
?useMart
listMarts()
variation <- useEnsembl(biomart="snp")
listDatasets(variation)
grch37 = useMart(biomart="ENSEMBL_MART_ENSEMBL",
host="grch37.ensembl.org",
path="/biomart/martservice",
dataset="hsapiens_gene_ensembl")
grch37
grch37 <- useMart(biomart="ENSEMBL_MART_ENSEMBL",
host="grch37.ensembl.org",
path="/biomart/martservice",
dataset="hsapiens_gene_ensembl")
listFilters(grch37)
listFilters(grch37)[1]
head(listFilters(grch37)[1])
my_refseq <- 'NM_001101'
getBM(attributes='ensembl_gene_id',
filters = c('chromosome_name', 'start', 'end', 'refseq_mrna',
values = my_refseq,
mart = ensembl)
my_refseq <- 'NM_001101'
getBM(attributes='ensembl_gene_id',
filters = c('chromosome_name', 'start', 'end', 'refseq_mrna'),
values = my_refseq,
mart = ensembl)
listAttributes(grch37)
listAttributes(grch37)[,1]
head(listAttributes(grch37)[,1])
head(listAttributes(grch37)[,1], 20)
getBM(attributes=c('ensembl_gene_id','chromosome_name','start_position','end_position'),
filters = 'refseq_mrna',
values = my_refseq,
mart = ensembl)
getBM(attributes=c('ensembl_gene_id','chromosome_name','start_position','end_position'),
filters = 'refseq_mrna',
values = my_refseq,
mart = grch37)
grch37 <- useMart(biomart="ENSEMBL_MART_ENSEMBL",
host="grch37.ensembl.org",
path="/biomart/martservice",
dataset="hsapiens_gene_ensembl")
getBM(attributes=c('ensembl_gene_id','chromosome_name','start_position','end_position'),
filters = 'refseq_mrna',
values = my_refseq,
mart = grch37)
ensembl_75 = useMart(biomart="ENSEMBL_MART_ENSEMBL", host="feb2014.archive.ensembl.org", path="/biomart/martservice", dataset="hsapiens_gene_ensembl")
getBM(attributes=c('ensembl_gene_id','chromosome_name','start_position','end_position'),
filters = 'refseq_mrna',
values = my_refseq,
mart = ensembl_75)
ensembl_75 = useMart(biomart="ENSEMBL_MART_ENSEMBL",
host="feb2014.archive.ensembl.org",
path="/biomart/martservice",
dataset="hsapiens_gene_ensembl")
getBM(attributes=c('ensembl_gene_id','chromosome_name','start_position','end_position'),
filters = 'refseq_mrna',
values = my_refseq,
mart = ensembl_75)
getBM(attributes=c('ensembl_gene_id','chromosome_name','start_position','end_position'),
filters = 'refseq_mrna',
values = my_refseq,
mart = ensembl)
head(out)
my_snp <- c('rs547420070', 'rs77274555')
listFilters(snp)
listAttributes(snp)
start <- Sys.time()
my_snp_detail <- getBM(attributes=c("refsnp_id","allele","chrom_start"),
filters=c("snp_filter"),
values=my_snp,
mart=snp)
end <- Sys.time()
print(end - start)
my_snp_detail
grch37 <- useMart(biomart="ENSEMBL_MART_ENSEMBL",
host="grch37.ensembl.org",
path="/biomart/martservice",
dataset="hsapiens_variation_ensembl")
listDatasets()
grch37 <- useMart(biomart="ENSEMBL_MART_ENSEMBL",
host="grch37.ensembl.org",
path="/biomart/martservice")
listDatasets(grch37)
listMarts(grch37)
grch37 <- useMart(biomart="ENSEMBL_MART_ENSEMBL",
host="grch37.ensembl.org",
path="/biomart/martservice")
listMarts(grch37)
getBM(attributes=c('ensembl_gene_id','chromosome_name','start_position','end_position'),
filters = 'refseq_mrna',
values = my_refseq,
mart = grch37)
listDatasets(grch37)
head(listDatasets(grch37))
grep(pattern = "hg", x = listDatasets(grch37), value = TRUE)
grep(pattern = "hg", x = listDatasets(grch37)[,1], value = TRUE)
grep(pattern = "human", x = listDatasets(grch37)[,1], value = TRUE)
listDatasets(grch37)[,1]
grep(pattern = "human", x = listDatasets(grch37)[,2], value = TRUE)
listDatasets(grch37)[,2]
grep(pattern = "homo", x = listDatasets(grch37)[,2], value = TRUE)
grep(pattern = "homo", x = listDatasets(grch37)[,2], value = TRUE, ignore.case = TRUE)
grep(pattern = "homo", x = listDatasets(grch37)[,2], ignore.case = TRUE)
listDatasets(grch37)[31,]
old_mart <- useMart(biomart="ENSEMBL_MART_ENSEMBL",
host="grch37.ensembl.org",
path="/biomart/martservice",
dataset="hsapiens_gene_ensembl")
old_mart <- useMart(biomart="ENSEMBL_MART_ENSEMBL",
host="grch37.ensembl.org",
path="/biomart/martservice",
dataset="hsapiens_gene_ensembl")
old_mart <- useMart(biomart="ENSEMBL_MART_ENSEMBL",
host="grch37.ensembl.org",
path="/biomart/martservice")
old_mart <- useMart(biomart="ENSEMBL_MART_ENSEMBL",
host="grch37.ensembl.org",
path="/biomart/martservice",
dataset="hsapiens_gene_ensembl")
getBM(attributes=c('ensembl_gene_id','chromosome_name','start_position','end_position'),
filters = 'refseq_mrna',
values = my_refseq,
mart = old_mart)
listMarts(grch37)
blah <- useMart(biomart = "ENSEMBL_MART_SNP",
host = "grch37.ensembl.org",
path = "/biomart/martservice")
listDatasets(blah)
blah <- useMart(biomart = "ENSEMBL_MART_SNP",
host = "grch37.ensembl.org",
path = "/biomart/martservice",
dataset = "hsapiens_snp")
getBM(attributes=c("refsnp_id","allele","chrom_start"),
filters=c("snp_filter"),
values=my_snp,
mart=blah)
my_snp <- c('rs3934834', 'rs11260603')
start <- Sys.time()
my_snp_detail <- getBM(attributes=c("refsnp_id","allele","chrom_start"),
filters=c("snp_filter"),
values=my_snp,
mart=snp)
end <- Sys.time()
print(end - start)
my_snp_detail
shapiro.test()
x <- rnorm(1000)
x
hist(x)
shapiro.test(x = x)
?shapiro.test
shapiro.test(rnorm(100, mean = 5, sd = 3))
shapiro.test(runif(100, min = 2, max = 4))
shapiro.text(rep(100, 100))
shapiro.test(rep(100, 100))
shapiro.test(1:100)
shapiro.test(rnorm(100, mean = 5, sd = 3))
shapiro.test(runif(100, min = 2, max = 4))
shapiro.test(rpois(100, 5)
)
shapiro.test(rpois(100, 5))
?ks.test()
x <- rnorm(50)
y <- runif(30)
# Do x and y come from the same distribution?
ks.test(x, y)
ks.test(x,x)
ks.test(rpois(100,5), rpois(100,5))
ks.test(rpois(100,5), rpois(99,5))
z <- rnorm(10000)
ks.test(sample(z,100),sample(z,100))
x <- sample(z, 100)
y <- sample(z, 100)
x
y
ks.test(x, y)
year <- c(2000 ,   2001  ,  2002  ,  2003 ,   2004)
rate <- c(9.34 ,   8.50  ,  7.62  ,  6.93  ,  6.60)
plot(year,rate,
main="Commercial Banks Interest Rate for 4 Year Car Loan",
sub="http://www.federalreserve.gov/releases/g19/20050805/")
plot(year,rate,
main="Blah",
sub="http://www.federalreserve.gov/releases/g19/20050805/")
fit <- lm(rate ~ year)
fit
names(fit)
attributes(fit)
q()
install.packages('timeline', repos='http://cran.r-project.org')
q()
require(timeline)
data(ww2)
timeline(ww2, ww2.events, event.spots=2, event.label='', event.above=FALSE)
ww2
class(ww2$StartDate[1])
as.date('1983-03-31')
as.Date('1983-03-31')
class(as.Date('1983-03-31'))
class(ww2)
data <- data.frame(Task=c('Bpipe','SQLite'), Others=c('Papers','Blah'))
ww2.events
timeline(ww2, ww2.events, event.spots=2, event.label='', event.above=FALSE)
timeline(data)
data
data <- data.frame(Task=c('Bpipe','SQLite'), Others=c('Papers','Blah'), Date=c(start,until))
start <- as.Date('2015-05-24')
until <- as.Date('2015-11-01')
data <- data.frame(Task=c('Bpipe','SQLite'), Others=c('Papers','Blah'), Date=c(start,until))
timeline(data)
data
timeline(ww2)
timeline(data)
plot(1:10)
timeline(ww2)
ww2
data <- data.frame(Task='Blah',
Others='Papers',
StartDate=start,
EndDate=end
)
data <- data.frame(Task='Blah',
Others='Papers',
StartDate=start,
EndDate=until
)
timeline(data)
timeline(ww2)
timeline(data)
a <- c("How long I've been here",
"Time",
as.Date('2015-05-24'),
as.Date('2015-11-01')
)
a
start
timeline(a)
q()
1.565e-03
3.968e-03
q()
q()
source('multiplot.R')
setwd("~/github/tang_sd_2015/figure/")
source('multiplot.R')
class <- c('intronic',
'UTR3',
'exonic',
'ncRNA_exonic',
'UTR5',
'ncRNA_intronic',
'upstream',
'downstream',
'intergenic',
'splicing',
'ncRNA_splicing')
class <- factor(x = class, levels = rev(class))
df <- data.frame(class = class, count = count)
count <- c(142280, #intronic
90117, #UTR3
87226, #exonic
18049, #ncRNA_exonic
17311, #UTR5
12900, #ncRNA_intronic
6376, #upstream
5917, #downstream
1366, #intergenic
607, #splicing
95) #ncRNA_splicing
class2 <- c('nonsynonymous SNV',
'synonymous SNV',
'unknown',
'nonframeshift deletion',
'frameshift deletion',
'stopgain',
'nonframeshift insertion',
'frameshift insertion',
'stoploss')
class2 <- factor(x = class2, levels = rev(class2))
count2 <- c(43756, 38910, 1303, 926, 708, 565, 542, 495, 49)
df2 <- data.frame(class = class2, count = count2)
library(ggplot2)
options(scipen=10000)
p1 <- ggplot(df, aes(x=class, y=count)) + geom_bar(stat="identity") +
ggtitle("Genomic annotation") +
ylim(0,160000) +
coord_flip() +
geom_text(aes(label=count), size=9, hjust=-0.2) +
theme(axis.text=element_text(size=28),
plot.title=element_text(size=34),
axis.ticks = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank())
p2 <- ggplot(df2, aes(x=class, y=count)) + geom_bar(stat="identity") +
ggtitle("Exonic annotation") +
ylim(0,50000) +
coord_flip() +
geom_text(aes(label=count), hjust=-0.2, size=10) +
theme(axis.text=element_text(size=28),
plot.title=element_text(size=34),
axis.ticks = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank())
multiplot(p1, p2, cols = 2)
ls()
multiplot
source('multiplot.R')
class <- c('intronic',
'UTR3',
'exonic',
'ncRNA_exonic',
'UTR5',
'ncRNA_intronic',
'upstream',
'downstream',
'intergenic',
'splicing',
'ncRNA_splicing')
class <- factor(x = class, levels = rev(class))
df <- data.frame(class = class, count = count)
count <- c(142280, #intronic
90117, #UTR3
87226, #exonic
18049, #ncRNA_exonic
17311, #UTR5
12900, #ncRNA_intronic
6376, #upstream
5917, #downstream
1366, #intergenic
607, #splicing
95) #ncRNA_splicing
class2 <- c('nonsynonymous SNV',
'synonymous SNV',
'unknown',
'nonframeshift deletion',
'frameshift deletion',
'stopgain',
'nonframeshift insertion',
'frameshift insertion',
'stoploss')
class2 <- factor(x = class2, levels = rev(class2))
count2 <- c(43756, 38910, 1303, 926, 708, 565, 542, 495, 49)
df2 <- data.frame(class = class2, count = count2)
library(ggplot2)
options(scipen=10000)
p1 <- ggplot(df, aes(x=class, y=count)) + geom_bar(stat="identity") +
ggtitle("Genomic annotation") +
ylim(0,160000) +
coord_flip() +
geom_text(aes(label=count), size=9, hjust=-0.2) +
theme(axis.text=element_text(size=28),
plot.title=element_text(size=34),
axis.ticks = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank())
p2 <- ggplot(df2, aes(x=class, y=count)) + geom_bar(stat="identity") +
ggtitle("Exonic annotation") +
ylim(0,50000) +
coord_flip() +
geom_text(aes(label=count), hjust=-0.2, size=10) +
theme(axis.text=element_text(size=28),
plot.title=element_text(size=34),
axis.ticks = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank())
multiplot(p1, p2, cols = 2)
q()
